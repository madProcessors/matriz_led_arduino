#include "LedControlMS.h";

LedControl matriz=LedControl(12,11,10,1);

void RepresentarMatriz(byte *,int);
void animar(byte [][8], int, int);

byte linea_horizontal[][8] = {
   {
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
  },
  {
    B00000000,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
  },
  {
    B00000000,
    B00000000,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
  },
  {
    B00000000,
    B00000000,
    B00000000,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
  },
  {
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B11111111,
    B00000000,
    B00000000,
    B00000000
  },
  {
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B11111111,
    B00000000,
    B00000000
  },
  {
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B11111111,
    B00000000
  },
    {
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B11111111
  }
};


byte linea_vertical[][8] = {
   {
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000
  },
  {
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
  },
  {
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
  },
  {
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
  },
  {
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
  },
  {
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
  },
  {
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
  },
    {
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
  }
};

byte linea_inclinada[][8] = {
    {
    B11110000,
    B11100000,
    B11000000,
    B10000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
    },

    {
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000000,
    B00000000,
    B00000000
    },

    {
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000000,
    B00000000
    },

    {
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000000
    },

    {
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000
    },

    {
    B00000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000
    },

    {
    B00000000,
    B00000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000
    },

    {
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000001,
    B00000011,
    B00000111,
    B00001111
    },

};


// cara emoji
byte Caras[][8] = {
    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10100101,
      B10011001,
      B01000010,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10000001,
      B10111101,
      B01000010,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10000001,
      B10111101,
      B01100110,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10100101,
      B10011001,
      B01000010,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10000001,
      B10111101,
      B01000010,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10000001,
      B10111101,
      B01100110,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10100101,
      B10011001,
      B01000010,
      B00111100
    },

    {
      B00111100,
      B01000010,
      B10100101,
      B10000001,
      B10000001,
      B10111101,
      B01000010,
      B00111100
    }
  };

  byte man_dance [][8] = {
    {
    B00111000,
    B00111000,
    B00010000,
    B11111111,
    B00010000,
    B00010000,
    B00101000,
    B01000100
    },

    {
    B00111000,
    B00111001,
    B00010010,
    B01111100,
    B10010000,
    B00010000,
    B00101000,
    B01000100
    },

    {
    B00111000,
    B10111001,
    B01010010,
    B00111100,
    B00010000,
    B00011100,
    B00100010,
    B01000000
    },

    {
    B00111000,
    B10111000,
    B01010000,
    B00111100,
    B00010010,
    B01110001,
    B01001000,
    B00000100
    },

    {
    B00111000,
    B00111000,
    B00010000,
    B11111111,
    B00010000,
    B00010000,
    B00101000,
    B01000100
    },

    {
    B00111000,
    B00111001,
    B00010010,
    B01111100,
    B10010000,
    B00010000,
    B00101000,
    B01000100
    },

    {
    B00111000,
    B10111001,
    B01010010,
    B00111100,
    B00010000,
    B00011100,
    B00100010,
    B01000000
    },

    {
    B00111000,
    B00111001,
    B00010010,
    B01111100,
    B10010000,
    B00010000,
    B00101000,
    B01000100
    },

};

void setup() {
  matriz.shutdown(0, false);
  matriz.setIntensity(0, 15);// La valores est√°n entre 1 y 15
  matriz.clearDisplay(0);
  Serial.begin(9600);
}




void loop() {
  animar(linea_horizontal, 8, 50); // LINEA HORIZONTAL
  delay(500);

  animar(linea_vertical, 8, 50); // LINEA VERTICAL
  delay(500);

  animar(linea_inclinada, 8, 50);//LINEA INCLINADA
  delay(500);
  
  animar(Caras, 8, 200); //CARAS
  delay(500);

  animar(man_dance, 8, 200); //MAN DANCE
  delay(500);
  



  matriz.clearDisplay(0);
}




void RepresentarMatriz(byte *Datos, int espera)
{
  for (int i = 0; i < 8; i++) // 8 columnas en cada fila
  {
    matriz.setColumn(0, i, Datos[7-i]);
  }
  delay(espera);
}




// <FRAMES, NUMERO DE FRAMES, INTERVALO ENTRE FILAS>
void animar(byte Datos[][8], int n_frames, int interv){
  Serial.print("frames: ");
  Serial.println((unsigned char)n_frames);

  for (int i = 0; i < n_frames; i++)
  {
    Serial.println((unsigned char)Datos[i]);
    RepresentarMatriz(Datos[i], interv);
  }
}
